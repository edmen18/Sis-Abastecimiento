<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAABGJJREFUWEftl3ls
        VFUUxmmiERMCakwMaPAPUWPABExQKVtYKiVGytZi7IJBpC1QoJulVLpQ21rZSncobWlQK1MoRQe6AEoJ
        i4VQAmmDAoKtCiYQUGEG0ejn+07nTl5n3pu+SkL9w0lu5s3ce+793fOdc+59fgD69emHAH3Z+nRx8b6V
        3WcW2WMWZ9RgYconiMuorNAke1BrfrTNKrKXqb5lqWWx2v8PqD4rc1sCKN51DmcuOdHYcgUrNzYyaB4j
        BBcw6HuEEFYWt+yB9R+34sDp37C57jyWrNlJgCe11p8TGPQNUX1WIEw9kJRTlZhZ3OhILfoK8R/ZEZW2
        A+EJFZizuBCLEvOrtUUGZJU27eT/2eXHkV7SjKWZuzB3SRGmh6c5JwdFv2NFDlOA7LLmP285gZ9/Ado6
        gYbTd7G96UfkVZ9BRGIl/GelYN32Uzh/Bbhxu2vMFyduY8ueC8jccgQT56b8pQEM6kkOU4DcbSfQ/gPQ
        chHY83WX+9OKDyEy9TO8MmMlXpoejzeXbxaw1stdYwpsbeKtectKMTEknVIN7kkOL4CMvE8DCqpbHFyQ
        u2XQxXxQi7eTqsT9gfNzMSE4DSOmxGBqaJYAZW09JnCMD0qgxvjPWOEcPSUs1JcUXgB0s/2kQ3ZFCa7e
        BM52dJeAej8/IUrGKQk4hhIQnBIkrN0rbeS0WHrCVAovgHL7JRTWtKP26E1DCaLTbbLLZ/wXIjmvCftO
        3TGUgN5hGxUY51MKL4CS2m8EoO74rwJw8jvIM3fGnS9aXS1SDBv7rgDUt/4uAByjjwEF4PLAU5oXHjZK
        y/8eAKNf7wHPLKAE9ICSQHnAMwt65YE1G22JueWHHMxrupnBwwITGrdVdGTOM+2GT17qbgRgOqpMYDZQ
        kvcLDootIV8Lz8G4Oavx8htJGBUQ6Rw9NSLEMyNEgoQcm4MR3XENuPsH0Hkd+LIdqGrolCpHIO6cAI8P
        D8arQclYnl0n3/ydkn9AMoL2ZrZh8eUCoQEM1BcnAVi1ab+4/WDb35JWh88B2+o7ZDc05C65CwI8NDRQ
        UpDFht/8rbc3s31ufKTYexYnAeAOFMCFq74BtAmGae1prTGypentLQB0ywgBoHaeABV7L4sHVBzQA6x+
        rsUfZVqpprcngJGtzgP3DOCV0/cNwKWhKQADlx6o3Pe9O34CwrIlfugBlwe9PcADx4oEZgB6e18S+ARg
        yrHs/nQDUlprDl8HixIvGYz41xesM9wBY4gAzBra09bWfE1seTqGxJRgWsSHGDNzlcoCYw8wz0t3fyvn
        etnnF+UYnhWVL4fJ4JFvYeCzQYYTKABlb2bb74lJ5gBJGxqk0OgB3ltfj9nRBXKc9gSgtyeAka1PgMjk
        klijckvN9OX3Bf/QQi31vC6dRvaetpznxTHBGZ72Ugdc9ZnXaU7uLjAGz+xnDZAruWq9tOc67mu7AvBz
        TdJfX2AMntnvfinRAfTGvtuLi6UXEyv3+3875n+AfwCEKYbv34Wr7gAAAABJRU5ErkJggg==
</value>
  </data>
</root>