<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnreporte.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        L6f/AZ/vBU1eomJhAAAAAElFTkSuQmCC
</value>
  </data>
</root>